/*
TRIANGULO
CUADRADO
PENTAGONO
HEXAGONO
HEPTAGONO
OCTAGONO
NONAGONO
DECAGONO
*/
procedure poligono () {
	COLOR [37,206,241];
    for(aux=0; aux<$1; aux=aux+1){
		AVANZA [$2];
		GIRA [$3];
    }
}
poligono(3,150,120);
poligono(4,150,90);
poligono(5,150,72);
poligono(6,150,60);
poligono(7,150,52);
poligono(8,110,45);
poligono(9,90,40);
poligono(10,90,36);

//ESTRELLA DE DAVID
procedure david(){
AVANZA[-150];
COLOR[100, 250, 300]; 
GIRA[-60];
for(i=0;i<2;i=i+1){   	  
	AVANZA[180];

GIRA[120];	
}
AVANZA[180];
 AVANZA[-120];
COLOR[180, 290, 180];
GIRA[120];
AVANZA[120];
GIRA[-120];
for(i=0;i<3;i=i+1){   	  
	AVANZA[180];

GIRA[-120];	
}
}
david();

//PENTAGRAMA
procedure pentagrama(){
AVANZA[150];
for(i=0;i<130;i=i+1){
   COLOR[i*13, i*26, i*51];
  
  GIRA[216];
	AVANZA[300];
}
}
pentagrama();

//ESPIRAGRAFO RARO
procedure espirografo() {
    for (i = 0; i < $1; i=i+1){
		COLOR[i*3,i*4,i*5];
		GIRA[-90 * i];        
		AVANZA[150];
		GIRA[90 * i];        
		AVANZA[20];
		GIRA[-90 * i];
		GIRA[1];
    }
}
espirografo(200);


//ESPIRAL CUADRADA
procedure espiralCuadrada() {
    GIRA[-90];
	COLOR [255, 0,0];
    for (i = 0; i < $1; i = i + 1) {
        AVANZA[i * 2];
        GIRA[-91];
    }
}
espiralCuadrada(100);


//CURVA DE HILBERT
procedure hilbert(){
       COLOR[255,0,0];
    if($1==0){
       return 0;
	}
    GIRA[$2];
    hilbert($1 - 1, -$2);
    AVANZA[10];
    GIRA[-$2];
    hilbert($1 - 1, $2);
    AVANZA[10];
    hilbert($1 - 1, $2);
    GIRA[-$2];
    AVANZA[10];
    hilbert($1 - 1, -$2);
    GIRA[$2];
    
}
hilbert(3,90);


//FRACTAL DE KOCH
procedure fractal(){
    COLOR[0, 0, 255];
    if($1<0){
        AVANZA[$2];
    }
    else{
        fractal($1-1,$2*0.33333333);
        GIRA[60];
	fractal($1-1,$2*0.33333333);
        GIRA[-60];
        GIRA[-60];
        fractal($1-1,$2*0.33333333);
        GIRA[60];
        fractal($1-1,$2*0.33333333);
    }
}
procedure koch(){
    AVANZA[-280];  
    fractal($1,500);
}
koch(3);


//ARBOL
COLOR[255, 0, 0];
GIRA[90];
AVANZA[-100];
GIRA[180+90];
procedure arbol(){
 if($1>4){
  AVANZA[$1];
  GIRA[20];
  arbol($1-4);
  GIRA[320];
  arbol($1-4);
  GIRA[20];
  AVANZA[(-1)*($1)];
 }
}
GIRA[90];
GIRA[180];
AVANZA[100];
GIRA[180];
arbol(50);


//REGLA
procedure regla(){
AVANZA[-200];
for(i=0;i<$1;i=i+1){
   COLOR[i*13, i*26, i*51];   
	AVANZA[10];

GIRA[90];
	AVANZA[5];

GIRA[180];
	AVANZA[10];

GIRA[180];
	AVANZA[5];

GIRA[-90];
}
}
regla(40);



####################################################################################################################################################################
####################################################################################################################################################################
####################################################################################################################################################################


//CIRCULO
procedure circulo(){
   for(aux=0; aux<360; aux=aux+1){
      COLOR[$3,$1,$2];
      AVANZA[2];
     
     GIRA[1];
   }
}
circulo(30,32,60);
GIRA[-80];



//FLOR
procedure circulo(){
   for(aux=0; aux<360; aux=aux+1){
      COLOR[$1,$2,$3];
      AVANZA[2];
     
     GIRA[1];
   }
}
procedure flor(){
   for(i=0;i<8;i=i+1){
      circulo((i+1)*30, (i+1)*32, (i+1)*60);
     
     GIRA[45];
   }
}
flor();



//ESTRELLA DE COLORES
for(i=0;i<130;i=i+1){
   COLOR[i*13, i*26, i*51];
   AVANZA[i*5];
  
  GIRA[150];
}



//TRIANGULOS
for(i=0;i<130;i=i+1){
   COLOR[i*13, i*26, i*51];
   AVANZA[i*5];
  
  GIRA[250];
}



//CUADRADO-TRIANGULO CICLOS
for(i=0;i<130;i=i+1){
   COLOR[200, 0, 200];
   AVANZA[i*4];
  
  GIRA[120];
}
GIRA[30];
AVANZA[300];
GIRA[-60];
for(i=0;i<80;i=i+1){
   COLOR[0, 200,150];
   AVANZA[i*5];
  GIRA[90];
}



//FLOR CIRCULOS
procedure circulo(){
   for(aux=0; aux<360; aux=aux+1){
      COLOR[$3,$1,$2];
      AVANZA[2];
	  GIRA[1];
   }
}
procedure flor(){
   for(i=0;i<8;i=i+1){
      circulo((i+1)*30, (i+1)*32, (i+1)*60);
	  GIRA[45];
   }
}
flor();



//PATRON RARO
procedure patron() {
   GIRA[-90];
    for (i = 0; i < 22; i = i + 1) {
       GIRA[-90];
	   COLOR[0, 255, 255];
       AVANZA[110 - (i * 10)];
       GIRA[-90];
       COLOR[255, 255, 51];
       AVANZA[i * 10];    
    }
}
patron();



//ROSA
procedure rosa() {
GIRA[-90];
    for (i = 0; i <= 100; i = i + 1) {
        COLOR[7*i,0,3*i];
        AVANZA[i * 2];
        GIRA[-81];
    }
}
rosa();
